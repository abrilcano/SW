name: C++ CI

on: [push, pull_request]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Setup MPI
      uses: mpi4py/setup-mpi@v1

    - name: Setup CMake
      uses: jwlawson/actions-setup-cmake@v1

    - name: Configure CMake
      run: cmake -S . -B build

    - name: Build
      run: cmake --build build

    - name: Run Tests
      run: ctest --test-dir build

  build-container:

    runs-on: ubuntu-latest

    strategy:
      # Keep going on other deployments if anything bloops
      fail-fast: false

    steps:

      - name: Check out code for the container builds
        uses: actions/checkout@v3
            
      - name : Setup MPI
        uses: mpi4py/setup-mpi@v1
      
      - name: Setup CMake
        uses: jwlawson/actions-setup-cmake@v1
        
      - name: Setup Singularity
        run : | 
          sudo apt-get update 
          sudo apt-get install -y \
          autoconf \
          automake \
          cryptsetup \
          fuse2fs \
          git \
          fuse \
          libfuse-dev \
          libglib2.0-dev \
          libseccomp-dev \
          libtool \
          pkg-config \
          runc \
          squashfs-tools \
          squashfs-tools-ng \
          uidmap \
          wget \
          zlib1g-dev

      - name: Install Singularity
        run: |
          wget https://github.com/sylabs/singularity/releases/download/v4.1.3/singularity-ce_4.1.3-jammy_amd64.deb
          sudo dpkg -i singularity-ce_4.1.3-jammy_amd64.deb

      - name: Build Singularity Container
        run: |
          sudo singularity build container.sif Singularity.def

      - name: Install sshpass
        run: | 
          sudo apt-get update && sudo apt-get install -y sshpass

      - name: Send container to remote host
        run: |
          sshpass -p ${{ secrets.PASSWORD }} scp -o StringHostKeyChecking=no -o UserKnownHostsFile=/dev/null container.sif ${{ secrets.USER }}@${{ secrets.HOST }}:.

      - name: Send job.sh
        run: |
          sshpass -p ${{ secrets.PASSWORD }} scp -o StringHostKeyChecking=no -o UserKnownHostsFile=/dev/null job.sh ${{ secrets.USER }}@${{ secrets.HOST }}:.

      - name: Run container on remote host
        run: |
          sshpass -p ${{ secrets.PASSWORD }} ssh -o StringHostKeyChecking=no -o UserKnownHostsFile=/dev/null ${{ secrets.USER }}@${{ secrets.HOST }} "sbatch job.sh"

        
        